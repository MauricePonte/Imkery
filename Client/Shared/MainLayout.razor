@using MudBlazor.Utilities
@inherits LayoutComponentBase

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode"/>
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar>
        <MudIcon Icon="@Icons.Filled.Hive" Color="Color.Warning" Size="Size.Large"/>
        <MudText Typo="Typo.h3">@Resources.Global_Imkery</MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen" ClipMode="DrawerClipMode.Always" Variant="@DrawerVariant.Temporary" Anchor="Anchor.Right">
        <NavMenu/>
    </MudDrawer>

    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Medium">

            <MudAlert Severity="Severity.Warning">
                @Resources.MainLayout_MaintenanceMessage
                <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Size="Size.Small"
                               Href="https://github.com/MauricePonte/Imkery" Target="_blank" />
            </MudAlert>

            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private bool _drawerOpen = false;
    private bool _isDarkMode;
    private MudThemeProvider _mudThemeProvider;
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}
